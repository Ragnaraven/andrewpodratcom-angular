@import "theme.scss";

@mixin font-size($fs-map) {
  @each $fs-breakpoint, $fs-font-size in $fs-map {
    @if $fs-breakpoint == null {
      font-size: $fs-font-size;
    } @else {
      @media screen and (min-width: $fs-breakpoint) {
        font-size: $fs-font-size;
      }
    }
  }
}

#apps {
  box-sizing: border-box;
  background-color: $one;
  color: $textLight;
  position: relative;

  min-height: 100vh;

  .noticeContainer {
    padding: 1.5rem 0.25rem;

    .material-symbols-outlined {
      color: $four;
    }

    .notice {
      padding: 0 0.5rem;
    }
  }
}

ul.projectsContainer {
  padding: 0;
  height: 100%;
  margin: 0;
  display: flex;
  flex: 1;
  flex-direction: row;
  flex-wrap: wrap;

  li.project {
    flex: 1;
    min-height: 50vh;
    min-width: 250px;
    position: relative;
    overflow: hidden;
    width: 25%;
    transition: all 0.3s;

    .workImage {
      height: 100%;
      margin: auto;
      object-fit: cover;
      position: absolute;
      width: 100%;
    }

    .workContentBg {
      z-index: 1000;
      transition: all 0.3s;

      .workContentContainer {
        display: flex;
        flex-direction: column;
        padding: 12px;
        position: absolute;
        top: 40%;
        width: 100%;
        transition: all 0.3s;

        .workContentWrapper {
          border-radius: 4px;
          opacity: 0.95;
          padding: 1rem;
          position: relative;
          width: 100%;
          transition: all 0.3s;

          .workHeader {
            color: inherit;
            font-size: 1.25rem;
          }

          .workDate {
            align-items: center;
            display: flex;

            .material-symbols-outlined {
              font-size: 0.8rem;
              margin-right: 4px;
            }

            color: inherit;
            font-size: 0.8rem;
            //opacity: 0;
          }

          .workLink {
            font-size: 0.8rem;
            color: inherit;
            height: 0;
            opacity: 0;
            transition: all 0.3s;
          }

          /*.activeTriangle {
            background-color: red; //$one;
            border-radius: 4px;
            display: block;
            height: 24px;
            margin-top: 48px;
            transform: rotate(45deg);
            width: 24px;
          }*/
        }

        .workDesc {
          padding: 1rem;
          color: inherit;
          font-size: 1rem;
          text-align: justify;
          opacity: 0;
          transition: opacity 400ms 0ms;
        }
      }

      &:hover {
        .workContentContainer {
          .workContentWrapper {
            .workLink {
              height: 1.25rem;
              opacity: 1;
            }
          }
          .workDesc {
            height: auto;
            opacity: 1;
          }
        }
      }
    }

    &:nth-of-type(1) > .workContentBg {
      .workContentWrapper {
        background-color: $one;
      }
      color: $textLight;
      &:hover {
        background-color: $two;
        opacity: 0.95;
      }
    }
    &:nth-of-type(2) > .workContentBg {
      .workContentWrapper {
        background-color: $two;
      }
      color: $textLight;
      &:hover {
        background-color: $three;
        opacity: 0.95;
      }
    }
    &:nth-of-type(3) > .workContentBg {
      .workContentWrapper {
        background-color: $three;
      }
      color: $textLight;
      &:hover {
        background-color: $four;
        opacity: 0.95;
      }
    }
    &:nth-of-type(4) > .workContentBg {
      .workContentWrapper {
        background-color: $four;
        color: $textDark;
      }
      &:hover {
        background-color: $one;
        color: $textLight;
        opacity: 0.95;
      }
    }
  }
}

#work {
  background-color: $two;
  height: 100vh;
}

#games {
  background-color: $three;
}

.palette {
  box-sizing: border-box;
  padding: 1em;
  background-color: black;
  gap: 1em;

  .cube {
    height: 250px;
    width: 250px;
    border-radius: 4px;
  }

  .c1 {
    background-color: map-get($map: $theme, $key: "one");
  }
  .c2 {
    background-color: $two;
  }
  .c3 {
    background-color: $three;
  }
  .c4 {
    background-color: $four;
  }
}
