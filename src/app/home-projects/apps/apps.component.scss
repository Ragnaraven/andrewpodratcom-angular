@import "theme.scss";

@mixin font-size($fs-map) {
  @each $fs-breakpoint, $fs-font-size in $fs-map {
    @if $fs-breakpoint == null {
      font-size: $fs-font-size;
    } @else {
      @media screen and (min-width: $fs-breakpoint) {
        font-size: $fs-font-size;
      }
    }
  }
}

#apps {
  box-sizing: border-box;
  background-color: $one;
  color: $textLight;

  max-height: 100vh;

  .noticeContainer {
    padding: 1rem 0.25rem;

    .material-symbols-outlined {
      color: $four;
    }

    .notice {
      padding: 0 0.5rem;
    }
  }
}

ul.projectsContainer {
  padding: 0;
  height: 100%;
  margin: 0;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;

  li.project {
    flex: 1;
    min-height: 100%;
    min-width: 250px;
    position: relative;
    width: 25%;

    .workImage {
      margin: auto;
      max-width: 100%;
    }

    .workContentWrapper {
      align-items: center;
      justify-content: center;
      display: flex;
      flex-direction: column;
      height: 100%;
      position: absolute;
      padding: 12px;
      top: 0;
      width: 100%;
      z-index: 1000;

      &:hover {
        opacity: 1;
        background-color: #d8d8d897;
      }

      .workContentWrapper {
        background-color: white;
        border-radius: 2px;
        border: 1px solid gray;
        width: 50%;
        height: 100%;
        color: black;
      }
    }
  }
}

#work {
  background-color: $two;
  height: 100vh;
}

#games {
  background-color: $three;
}

.palette {
  box-sizing: border-box;
  padding: 1em;
  background-color: black;
  gap: 1em;

  .cube {
    height: 250px;
    width: 250px;
    border-radius: 4px;
  }

  .c1 {
    background-color: map-get($map: $theme, $key: "one");
  }
  .c2 {
    background-color: $two;
  }
  .c3 {
    background-color: $three;
  }
  .c4 {
    background-color: $four;
  }
}
